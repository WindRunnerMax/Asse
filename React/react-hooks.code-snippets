{
    // Place your 全局 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    //     "scope": "javascript,typescript",
    //     "prefix": "log",
    //     "body": [
    //         "console.log('$1');",
    //         "$2"
    //     ],
    //     "description": "Log output to console"
    // }
    "react-hooks-view": {
        "scope": "typescriptreact",
        "prefix": "react-hooks-view",
        "body": [
            "import { FC, useState } from \"react\";",
            "import styles from \"./index.module.scss\";",
            "",
            "const Component: FC<{",
            "    className?: string;",
            "}> = props => {",
            "    return (",
            "        <div className={props.className}>",
            "            <div></div>",
            "        </div>",
            "    );",
            "};",
            "",
        	"export default Component;",
			""
        ],
        "description": "react-hooks-view"
    },
	"react-hooks-component": {
        "scope": "typescriptreact",
        "prefix": "react-hooks-component",
        "body": [
            "import { FC } from \"react\";",
            "import styles from \"./index.module.scss\";",
            "",
            "interface Props {",
			"    name: string;",
			"}",
            "",
            "const Component: FC<Props> = props => {",
            "    return <div className={styles.example}>{props.name}</div>;",
            "};",
            "",
			"Component.defaultProps = {};",
			"",
        	"export default Component;",
			"",

        ],
        "description": "react-hooks-component"
    }
}